#Regression Templete

# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


# Importing the dataset
dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:2].values
y = dataset.iloc[:, 2].values


# Splitting the dataset into the Training set and Test set
'''from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state = 0)'''

# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()
X=X.reshape(-1,1)
y=y.reshape(-1,1)
X= sc_X.fit_transform(X)
y = sc_y.fit_transform(y)


#Fitting SVR to the dataset   
from sklearn.svm import SVR
regressor= SVR(kernel='rbf')
regressor.fit(X,y)

#predicting the result of Linear regression
y_pred = sc_y.inverse_transform(regressor.predict(sc_X.transform(np.array([[6.5]]))))



#visualising the SVR results
plt.scatter(X,y,color='red')
plt.plot(X,regressor.predict(X), color='blue')
plt.title('SVR RESULTS')
plt.xlabel('Position levels')
plt.ylabel('salary')
plt.show()


#visualising the SVR model results
X_grid= np.arange(min(X),max(X),0.1)
X_grid= X_grid.reshape((len(X_grid),1))
plt.scatter(X,y,color='red')
plt.plot(X_grid,regressor.predict(X_grid), color='blue')
plt.title('SVR RESULTS')
plt.xlabel('Position levels')
plt.ylabel('salary')
plt.show()



